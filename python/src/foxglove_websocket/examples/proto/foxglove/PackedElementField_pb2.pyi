"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PackedElementField(google.protobuf.message.Message):
    """A field present within each element in a byte array of packed elements."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _NumericType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NumericTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PackedElementField._NumericType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: PackedElementField._NumericType.ValueType  # 0
        UINT8: PackedElementField._NumericType.ValueType  # 1
        INT8: PackedElementField._NumericType.ValueType  # 2
        UINT16: PackedElementField._NumericType.ValueType  # 3
        INT16: PackedElementField._NumericType.ValueType  # 4
        UINT32: PackedElementField._NumericType.ValueType  # 5
        INT32: PackedElementField._NumericType.ValueType  # 6
        FLOAT32: PackedElementField._NumericType.ValueType  # 7
        FLOAT64: PackedElementField._NumericType.ValueType  # 8
    class NumericType(_NumericType, metaclass=_NumericTypeEnumTypeWrapper):
        """Numeric type"""
        pass

    UNKNOWN: PackedElementField.NumericType.ValueType  # 0
    UINT8: PackedElementField.NumericType.ValueType  # 1
    INT8: PackedElementField.NumericType.ValueType  # 2
    UINT16: PackedElementField.NumericType.ValueType  # 3
    INT16: PackedElementField.NumericType.ValueType  # 4
    UINT32: PackedElementField.NumericType.ValueType  # 5
    INT32: PackedElementField.NumericType.ValueType  # 6
    FLOAT32: PackedElementField.NumericType.ValueType  # 7
    FLOAT64: PackedElementField.NumericType.ValueType  # 8

    NAME_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: typing.Text
    """Name of the field"""

    offset: builtins.int
    """Byte offset from start of data buffer"""

    type: global___PackedElementField.NumericType.ValueType
    """Type of data in the field. Integers are stored using little-endian byte order."""

    def __init__(self,
        *,
        name: typing.Text = ...,
        offset: builtins.int = ...,
        type: global___PackedElementField.NumericType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","offset",b"offset","type",b"type"]) -> None: ...
global___PackedElementField = PackedElementField
