"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import foxglove.Color_pb2
import foxglove.Point2_pb2
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class CircleAnnotation(google.protobuf.message.Message):
    """A circle annotation on a 2D image"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIMESTAMP_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    DIAMETER_FIELD_NUMBER: builtins.int
    THICKNESS_FIELD_NUMBER: builtins.int
    FILL_COLOR_FIELD_NUMBER: builtins.int
    OUTLINE_COLOR_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of circle"""
        pass
    @property
    def position(self) -> foxglove.Point2_pb2.Point2:
        """Center of the circle in 2D image coordinates"""
        pass
    diameter: builtins.float
    """Circle diameter"""

    thickness: builtins.float
    """Line thickness"""

    @property
    def fill_color(self) -> foxglove.Color_pb2.Color:
        """Fill color"""
        pass
    @property
    def outline_color(self) -> foxglove.Color_pb2.Color:
        """Outline color"""
        pass
    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        position: typing.Optional[foxglove.Point2_pb2.Point2] = ...,
        diameter: builtins.float = ...,
        thickness: builtins.float = ...,
        fill_color: typing.Optional[foxglove.Color_pb2.Color] = ...,
        outline_color: typing.Optional[foxglove.Color_pb2.Color] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fill_color",b"fill_color","outline_color",b"outline_color","position",b"position","timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["diameter",b"diameter","fill_color",b"fill_color","outline_color",b"outline_color","position",b"position","thickness",b"thickness","timestamp",b"timestamp"]) -> None: ...
global___CircleAnnotation = CircleAnnotation
