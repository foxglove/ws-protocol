"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import foxglove.Color_pb2
import foxglove.Point2_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PointsAnnotation(google.protobuf.message.Message):
    """An array of points on a 2D image"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PointsAnnotation._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: PointsAnnotation._Type.ValueType  # 0
        POINTS: PointsAnnotation._Type.ValueType  # 1
        LINE_LOOP: PointsAnnotation._Type.ValueType  # 2
        LINE_STRIP: PointsAnnotation._Type.ValueType  # 3
        LINE_LIST: PointsAnnotation._Type.ValueType  # 4
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Type of points annotation"""
        pass

    UNKNOWN: PointsAnnotation.Type.ValueType  # 0
    POINTS: PointsAnnotation.Type.ValueType  # 1
    LINE_LOOP: PointsAnnotation.Type.ValueType  # 2
    LINE_STRIP: PointsAnnotation.Type.ValueType  # 3
    LINE_LIST: PointsAnnotation.Type.ValueType  # 4

    TIMESTAMP_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    POINTS_FIELD_NUMBER: builtins.int
    OUTLINE_COLOR_FIELD_NUMBER: builtins.int
    OUTLINE_COLORS_FIELD_NUMBER: builtins.int
    FILL_COLOR_FIELD_NUMBER: builtins.int
    THICKNESS_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of annotation"""
        pass
    type: global___PointsAnnotation.Type.ValueType
    """Type of points annotation to draw"""

    @property
    def points(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[foxglove.Point2_pb2.Point2]:
        """Points in 2D image coordinates"""
        pass
    @property
    def outline_color(self) -> foxglove.Color_pb2.Color:
        """Outline color"""
        pass
    @property
    def outline_colors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[foxglove.Color_pb2.Color]:
        """Per-point colors, if `type` is `POINTS`, or per-segment stroke colors, if `type` is `LINE_LIST`."""
        pass
    @property
    def fill_color(self) -> foxglove.Color_pb2.Color:
        """Fill color"""
        pass
    thickness: builtins.float
    """Stroke thickness"""

    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type: global___PointsAnnotation.Type.ValueType = ...,
        points: typing.Optional[typing.Iterable[foxglove.Point2_pb2.Point2]] = ...,
        outline_color: typing.Optional[foxglove.Color_pb2.Color] = ...,
        outline_colors: typing.Optional[typing.Iterable[foxglove.Color_pb2.Color]] = ...,
        fill_color: typing.Optional[foxglove.Color_pb2.Color] = ...,
        thickness: builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fill_color",b"fill_color","outline_color",b"outline_color","timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fill_color",b"fill_color","outline_color",b"outline_color","outline_colors",b"outline_colors","points",b"points","thickness",b"thickness","timestamp",b"timestamp","type",b"type"]) -> None: ...
global___PointsAnnotation = PointsAnnotation
