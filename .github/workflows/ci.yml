name: CI

on:
  push:
    branches: [main]
    tags: ["releases/*"]
  pull_request:
    branches: ["*"]

jobs:
  typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org
          cache: yarn

      - run: yarn install --frozen-lockfile
      - run: yarn workspace @foxglove/ws-protocol lint:ci
      - run: yarn workspace @foxglove/ws-protocol test

      - name: Publish to NPM
        if: ${{ startsWith(github.ref, 'refs/tags/releases/typescript/v') }}
        run: yarn workspace @foxglove/ws-protocol publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
          cache: pipenv
      - run: pip install pipenv
      - run: pipenv install --dev --deploy
      - run: pipenv run black --check --diff --color
      - run: pipenv run pyright src tests
      - run: pipenv run pytest
      - run: pipenv run python -m build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          packages_dir: python/dist
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/releases/python/v') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: python/dist

  cpp:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cpp
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install clang-10 llvm-10 clang-format
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: pip install conan
      - run: make format
      - run: make coverage
      - run: make debug
